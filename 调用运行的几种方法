1.调用unittest.main()方法
import unittest
from mathfunc import *
 
 
class TestMathFunc(unittest.TestCase):

    def test_add(self):
        self.assertEqual(3, add(1, 2))
        self.assertNotEqual(3, add(2, 2))

    def test_minus(self):
        self.assertEqual(1, minus(3, 2))

    def test_multi(self):
        self.assertEqual(6, multi(3, 2))

    def test_divide(self):
        self.assertEqual(2, divide(6, 3))
        self.assertEqual(3, divide(5, 2))
 
if __name__ == '__main__':
    unittest.main(verbosity=2)

mathfunc.py内容如下:
def add(a, b):
    return a + b
 
def minus(a, b):
    return a - b
 
def multi(a, b):
    return a * b
 
def divide(a, b):
    return a / b

    
 2.调用TestSuite的run方法
 
suite6 = unittest.TestSuite()
suite6.addTest(UserCase('testAddUser'))
suite6.addTest(UserCase('testDelUser'))
result = unittest.TextTestResult(sys.stdout,'test result',1)
suite6.run(result)

3. HTMLTestRunner类运行

suite3 = unittest.TestSuite()
suite3.addTest(UserCase('testAddUser'))
suite3.addTest(UserCase('testDelUser'))

fp = open('res.html','wb')#打开一个保存结果的html文件
runner = HTMLTestRunner.HTMLTestRunner(stream=fp,title='api测试报告',description='测试情况')
#生成执行用例的对象
runner.run(suite3)

4.unittest.TextTestRunner方法
 test_mathfunc.py和 mathfunc.py参考tool目录
import unittest
from test_mathfunc import TestMathFunc
 
if __name__ == '__main__':
    suite = unittest.TestSuite()
 
    tests = [TestMathFunc("test_add"), TestMathFunc("test_minus"), TestMathFunc("test_divide")]
    suite.addTests(tests)
 
    runner = unittest.TextTestRunner(verbosity=2)
    runner.run(suite)

